<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>作业2,使用DOM简单操控页面</title>
      <link href="/2024/10/28/except2/"/>
      <url>/2024/10/28/except2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//菜单收缩与扩展</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">show</span>(<span class="params">menuId</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> menu = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(menuId);</span><br><span class="line">    <span class="keyword">const</span> allMenus = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;#cont_left ul ul&#x27;</span>);</span><br><span class="line">    allMenus.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">m</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (m !== menu) &#123;</span><br><span class="line">            m.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    menu.<span class="property">style</span>.<span class="property">display</span> = (menu.<span class="property">style</span>.<span class="property">display</span> === <span class="string">&#x27;block&#x27;</span> ? <span class="string">&#x27;none&#x27;</span> : <span class="string">&#x27;block&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//219971147 朱良桂</span></span><br><span class="line"><span class="comment">//获取原始图片路径</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showImg</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//获取路径</span></span><br><span class="line">    <span class="comment">//将路径在页面展示</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;msg1&quot;</span>).<span class="property">innerHTML</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;fruit&quot;</span>).<span class="title function_">getAttribute</span>(<span class="string">&quot;src&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取喜欢的水果</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getFruit</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//用数组来存</span></span><br><span class="line">    <span class="keyword">const</span> enjoys = [];</span><br><span class="line">    <span class="comment">//获取复选框的被选中的选项</span></span><br><span class="line">    <span class="keyword">const</span> checkboxes = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;input[name=&quot;enjoy&quot;]:checked&#x27;</span>);</span><br><span class="line">    <span class="comment">//遍历并去除选项的值</span></span><br><span class="line">    checkboxes.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">checkbox</span>) &#123;</span><br><span class="line">        enjoys.<span class="title function_">push</span>(checkbox.<span class="property">value</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//将路径在页面展示</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;msg2&quot;</span>).<span class="property">innerHTML</span> = enjoys</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建图片</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createImg</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 创建一个新的img元素</span></span><br><span class="line">    <span class="keyword">const</span> img = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">    <span class="comment">// 设置img元素的src属性</span></span><br><span class="line">    img.<span class="property">src</span> = <span class="string">&#x27;https://img2.imgtp.com/2024/04/11/FQ9KsIEC.jpg&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取id为msg3的元素</span></span><br><span class="line">    <span class="keyword">const</span> msg3 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;msg3&#x27;</span>);</span><br><span class="line">    <span class="comment">// 用新创建的img元素替换id为msg3的元素</span></span><br><span class="line">    msg3.<span class="property">parentNode</span>.<span class="title function_">replaceChild</span>(img, msg3);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//克隆图片</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">cloneImg</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 克隆一个新的元素</span></span><br><span class="line">    <span class="keyword">const</span> img = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;fruit&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> newImg = img.<span class="title function_">cloneNode</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取id为msg3的元素</span></span><br><span class="line">    <span class="keyword">const</span> msg4 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;msg4&#x27;</span>);</span><br><span class="line">    <span class="comment">// 用克隆的元素替换id为msg3的元素</span></span><br><span class="line">    msg4.<span class="property">parentNode</span>.<span class="title function_">replaceChild</span>(newImg, msg4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//改变图片</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeImg</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 创建一个新的img元素</span></span><br><span class="line">    <span class="keyword">const</span> img = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">    <span class="comment">// 设置img元素的src属性</span></span><br><span class="line">    img.<span class="property">src</span> = <span class="string">&#x27;https://img2.imgtp.com/2024/04/11/FQ9KsIEC.jpg&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取id为fruit的元素</span></span><br><span class="line">    <span class="keyword">const</span> fruit = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;fruit&#x27;</span>);</span><br><span class="line">    <span class="comment">// 用新创建的img元素替换id为msg3的元素</span></span><br><span class="line">    fruit.<span class="property">parentNode</span>.<span class="title function_">replaceChild</span>(img, fruit);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除图片</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">removeImg</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取id为fruit的元素</span></span><br><span class="line">    <span class="keyword">const</span> fruit = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;fruit&#x27;</span>);</span><br><span class="line">    <span class="comment">//删除节点</span></span><br><span class="line">    fruit.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(fruit)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//操作样式1</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeCss1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取id为fruit的元素</span></span><br><span class="line">    <span class="keyword">const</span> fruit = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;fruit&#x27;</span>);</span><br><span class="line">    fruit.<span class="property">style</span> = <span class="string">&quot;border: 5px solid aqua&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//操作样式2</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeCss2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> fieldsets = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;fieldset&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> fieldset <span class="keyword">of</span> fieldsets) &#123;</span><br><span class="line">        fieldset.<span class="property">style</span> = <span class="string">&quot;backGround: green&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style type="text/css">        html, div, ul, li {            margin: 0;            padding: 0;        }        a {            cursor: pointer;        }        li {            list-style: none;            cursor: pointer;        }        #cont_left {            width: 300px;            height: 500px;            float: left;        }</style><div id="cont_left">    <ul><a onclick="show('menu1')"><img src="https://img2.imgtp.com/2024/04/11/PtPwPBPs.gif"> 通过DOM获取信息 </a>        <ul id="menu1" style="display: none">            <li onclick="showImg()"><img src="https://img2.imgtp.com/2024/04/11/DSGX8uri.gif">获取原始图片路径</li>            <li onclick="getFruit()"><img src="https://img2.imgtp.com/2024/04/11/DSGX8uri.gif">获取我喜欢的水果</li>        </ul>    </ul>    <ul><img src="https://img2.imgtp.com/2024/04/11/PtPwPBPs.gif"><a onclick="show('menu2')"> 通过DOM操作元素 </a>        <ul id="menu2" style="display: none">            <li onclick="createImg()"><img src="https://img2.imgtp.com/2024/04/11/DSGX8uri.gif">创建图片</li>            <li onclick="cloneImg()"><img src="https://img2.imgtp.com/2024/04/11/DSGX8uri.gif">克隆图片</li>            <li onclick="changeImg()"><img src="https://img2.imgtp.com/2024/04/11/DSGX8uri.gif">改变图片</li>            <li onclick="removeImg()"><img src="https://img2.imgtp.com/2024/04/11/DSGX8uri.gif">删除图片</li>        </ul>    </ul>    <ul><img src="https://img2.imgtp.com/2024/04/11/PtPwPBPs.gif"><a onclick="show('menu3')"> 通过DOM操作样式 </a>        <ul id="menu3" style="display: none">            <li onclick="changeCss1()"><img src="https://img2.imgtp.com/2024/04/11/DSGX8uri.gif">为原始图片加上行间样式</li>            <li onclick="changeCss2()"><img src="https://img2.imgtp.com/2024/04/11/DSGX8uri.gif">为所有的fieldset加上内部样式</li>        </ul>    </ul></div><fieldset>    <legend>原始图片</legend>    <img id="fruit" src="https://img2.imgtp.com/2024/04/11/FIvEwMcK.jpg"></fieldset><fieldset>    <legend>图片路径</legend>    <p id="msg1">在这里显示</p></fieldset><fieldset>    <legend>选择你喜欢的水果</legend>    <ul style="text-align: left;">        <li style="float: left">            <input name="enjoy" type="checkbox" value="苹果"/>苹果        </li>        <li style="float: left">            <input name="enjoy" type="checkbox" value="香蕉" checked="checked"/>香蕉        </li>        <li style="float: left">            <input name="enjoy" type="checkbox" value="葡萄"/>葡萄        </li>        <li style="float: left">            <input name="enjoy" type="checkbox" value="梨" checked="checked"/>梨        </li>        <li style="float: left">            <input name="enjoy" type="checkbox" value="西瓜"/>西瓜        </li>    </ul>    <div id="msg2" style="margin-top: 10px;text-align: left;"></div></fieldset><fieldset>    <legend>创建图片</legend>    <div id="msg3"></div></fieldset><fieldset>    <legend>克隆图片</legend>    <div id="msg4"></div></fieldset><script>//菜单收缩与扩展    function show(menuId) {        const menu = document.getElementById(menuId);        const allMenus = document.querySelectorAll('#cont_left ul ul');        allMenus.forEach(function (m) {            if (m !== menu) {                m.style.display = 'none';            }        });        menu.style.display = (menu.style.display === 'block' ? 'none' : 'block');    }//219971147 朱良桂    //获取原始图片路径    function showImg() {        //获取路径        //将路径在页面展示        document.getElementById("msg1").innerHTML = document.getElementById("fruit").getAttribute("src");    }    //获取喜欢的水果    function getFruit() {        //用数组来存        const enjoys = [];        //获取复选框的被选中的选项        const checkboxes = document.querySelectorAll('input[name="enjoy"]:checked');        //遍历并去除选项的值        checkboxes.forEach(function (checkbox) {            enjoys.push(checkbox.value);        });        //将路径在页面展示        document.getElementById("msg2").innerHTML = enjoys    }    //创建图片    function createImg() {        // 创建一个新的img元素        const img = document.createElement('img');        // 设置img元素的src属性        img.src = 'https://img2.imgtp.com/2024/04/11/FQ9KsIEC.jpg';        // 获取id为msg3的元素        const msg3 = document.getElementById('msg3');        // 用新创建的img元素替换id为msg3的元素        msg3.parentNode.replaceChild(img, msg3);    }    //克隆图片    function cloneImg() {        // 克隆一个新的元素        const img = document.getElementById('fruit');        const newImg = img.cloneNode()        // 获取id为msg3的元素        const msg4 = document.getElementById('msg4');        // 用克隆的元素替换id为msg3的元素        msg4.parentNode.replaceChild(newImg, msg4);    }    //改变图片    function changeImg() {        // 创建一个新的img元素        const img = document.createElement('img');        // 设置img元素的src属性        img.src = 'https://img2.imgtp.com/2024/04/11/FQ9KsIEC.jpg';        // 获取id为fruit的元素        const fruit = document.getElementById('fruit');        // 用新创建的img元素替换id为msg3的元素        fruit.parentNode.replaceChild(img, fruit);    }    //删除图片    function removeImg() {        // 获取id为fruit的元素        const fruit = document.getElementById('fruit');        //删除节点        fruit.parentNode.removeChild(fruit)    }    //操作样式1    function changeCss1() {        // 获取id为fruit的元素        const fruit = document.getElementById('fruit');        fruit.style = "border: 5px solid aqua"    }    //操作样式2    function changeCss2() {        const fieldsets = document.getElementsByTagName("fieldset");        for (let fieldset of fieldsets) {            fieldset.style = "backGround: green"        }    }</script>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作业3，DOM2，事件流的基本运用</title>
      <link href="/2024/10/28/homeWork3/"/>
      <url>/2024/10/28/homeWork3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 获取坦克标签</span></span><br><span class="line"><span class="keyword">let</span> tank = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;mytank&quot;</span>);</span><br><span class="line"><span class="comment">// 设置监听器监视键盘行为</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keypress&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">// 获取坦克当前位置</span></span><br><span class="line">    <span class="comment">//获取坦克的css样式</span></span><br><span class="line">    <span class="keyword">let</span> style = <span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(tank);</span><br><span class="line">    <span class="comment">//获取坦克top和left，并强转为number类型</span></span><br><span class="line">    <span class="keyword">let</span> top = <span class="built_in">parseInt</span>(style.<span class="title function_">getPropertyValue</span>(<span class="string">&quot;top&quot;</span>));</span><br><span class="line">    <span class="keyword">let</span> left = <span class="built_in">parseInt</span>(style.<span class="title function_">getPropertyValue</span>(<span class="string">&quot;left&quot;</span>));</span><br><span class="line">    <span class="comment">// 根据按键移动坦克</span></span><br><span class="line">    <span class="comment">//通过图片相对位置来限制坦克的移动</span></span><br><span class="line">    <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&quot;w&quot;</span>) &#123;</span><br><span class="line">        <span class="comment">//修改坦克的图片达到旋转的效果</span></span><br><span class="line">        tank.<span class="property">src</span> = <span class="string">&quot;images/up.png&quot;</span>;</span><br><span class="line">        <span class="comment">//通过对样式的修改达到移动的效果</span></span><br><span class="line">        tank.<span class="property">style</span>.<span class="property">top</span> = (top - <span class="number">10</span>) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&quot;s&quot;</span>) &#123;</span><br><span class="line">        tank.<span class="property">src</span> = <span class="string">&quot;images/down.png&quot;</span>;</span><br><span class="line">        tank.<span class="property">style</span>.<span class="property">top</span> = (top + <span class="number">10</span>) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&quot;a&quot;</span>) &#123;</span><br><span class="line">        tank.<span class="property">src</span> = <span class="string">&quot;images/left.png&quot;</span>;</span><br><span class="line">        tank.<span class="property">style</span>.<span class="property">left</span> = (left - <span class="number">10</span>) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&quot;d&quot;</span>) &#123;</span><br><span class="line">        tank.<span class="property">src</span> = <span class="string">&quot;images/right.png&quot;</span>;</span><br><span class="line">        tank.<span class="property">style</span>.<span class="property">left</span> = (left + <span class="number">10</span>) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><style type="text/css">input {    font-size: 26px;    margin-top: 20px;}#map {    height: 640px;    width: 640px;    background-image: url(https://img2.imgtp.com/2024/04/16/kPvsm1NL.png);}    #mytank {        position: relative;        left: 10px;        top: 100px;}</style><div id="map">    <img id="mytank" src="https://img2.imgtp.com/2024/04/16/bhF04f5z.png"/></div><script>    // 获取坦克标签    let tank = document.getElementById("mytank");    // 设置监听器监视键盘行为    document.addEventListener('keypress', function (e) {        // 获取坦克当前位置        //获取坦克的css样式        let style = window.getComputedStyle(tank);        //获取坦克top和left，并强转为number类型        let top = parseInt(style.getPropertyValue("top"));        let left = parseInt(style.getPropertyValue("left"));        // 根据按键移动坦克        if (e.key === "w" && top > 0 ) {            //修改坦克的图片达到旋转的效果            tank.src = "https://img2.imgtp.com/2024/04/16/isRa1Klu.png";            //通过对样式的修改达到移动的效果            tank.style.top = (top - 10) + "px";        } else if (e.key === "s" && top < 560 ) {            tank.src = "https://img2.imgtp.com/2024/04/16/xEHiF7hn.png";            tank.style.top = (top + 10) + "px";        } else if (e.key === "a" && left > -280 ) {            tank.src = "https://img2.imgtp.com/2024/04/16/PFEPxulk.png";            tank.style.left = (left - 10) + "px";        } else if (e.key === "d" && left < 280 ) {            tank.src = "https://img2.imgtp.com/2024/04/16/bhF04f5z.png";            tank.style.left = (left + 10) + "px";        }    });</script>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作业5，使用jQuery修改表格</title>
      <link href="/2024/05/08/homeWork5/"/>
      <url>/2024/05/08/homeWork5/</url>
      
        <content type="html"><![CDATA[<table border="0" cellspacing="0" cellpadding="0" id="myTable">    <tr id="row1">        <td>书名</td>        <td>价格</td>    </tr>    <tr id="row2">        <td>看得见风景的房间</td>        <td class="center">&yen;30.00</td>    </tr>    <tr id="row3">        <td>60个瞬间</td>        <td class="center">&yen;32.00</td>    </tr></table><input name="b1" type="button" value="增加一行" onclick="addRow()" /><input name="b2" type="button" value="删除第2行" onclick="delRow()" /><input name="b3" type="button" value="修改标题样式" onclick="updateRow()" /><input name="b4" type="button" value="复制最后一行" onclick="copyRow()" /><style type="text/css">        body {            font-size: 13px;            line-height: 25px;        }        table {            border-top: 1px solid #333;            border-left: 1px solid #333;            width: 300px;        }        td {            border-right: 1px solid #333;            border-bottom: 1px solid #333;        }        .center {            text-align: center;        }</style><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">addRow</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 创建新节点</span></span><br><span class="line">    <span class="keyword">let</span> newRow = $(<span class="string">&quot;&lt;tr&gt;&lt;td&gt;幸福从天而降&lt;/td&gt;&lt;td align=&#x27;center&#x27;&gt;&amp;yen;18.50&lt;/td&gt;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">    <span class="comment">// 将节点添加到指定标签后</span></span><br><span class="line">    $(<span class="string">&quot;#row1&quot;</span>).<span class="title function_">parent</span>().<span class="title function_">append</span>(newRow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 219971147朱良桂</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateRow</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取标签后，设置css</span></span><br><span class="line">    $(<span class="string">&quot;#row1&quot;</span>).<span class="title function_">css</span>(&#123;<span class="string">&quot;font-weight&quot;</span>: <span class="string">&quot;bold&quot;</span>, <span class="string">&quot;text-align&quot;</span>: <span class="string">&quot;center&quot;</span>, <span class="string">&quot;background-color&quot;</span>: <span class="string">&quot;#cccccc&quot;</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">delRow</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> dRow = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;tr&quot;</span>); <span class="comment">//访问被删除的行</span></span><br><span class="line">    <span class="keyword">if</span> (dRow[<span class="number">2</span>] != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// 删除指定节点</span></span><br><span class="line">        dRow[<span class="number">2</span>].<span class="title function_">remove</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">copyRow</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取table标签的所有子节点</span></span><br><span class="line">    <span class="keyword">let</span> lastRow = $(<span class="string">&quot;#myTable tr:last-child&quot;</span>);</span><br><span class="line">    <span class="comment">// 克隆节点</span></span><br><span class="line">    <span class="keyword">let</span> newRow = lastRow.<span class="title function_">clone</span>();</span><br><span class="line">    <span class="comment">// 将节点添加到指定标签之后</span></span><br><span class="line">    $(<span class="string">&quot;#myTable&quot;</span>).<span class="title function_">append</span>(newRow);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.7.1/jquery.slim.min.js"></script><script>        function addRow() {            // 创建新节点            let newRow = $("<tr><td>幸福从天而降</td><td align='center'>&yen;18.50</td></tr>");            // 将节点添加到指定标签后            $("#row1").parent().append(newRow);        }        // 219971147朱良桂        function updateRow() {            // 获取标签后，设置css            $("#row1").css({"font-weight": "bold", "text-align": "center", "background-color": "#cccccc"});        }        function delRow() {            let dRow = document.getElementsByTagName("tr"); //访问被删除的行            if(dRow[2]!=null){                // 删除指定节点                dRow[2].remove();            }        }        function copyRow() {            // 获取table标签的所有子节点            let lastRow = $("#myTable tr:last-child");            // 克隆节点            let newRow = lastRow.clone();            // 将节点添加到指定标签之后            $("#myTable").append(newRow);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java设计模式</title>
      <link href="/2024/04/29/java-DeviseModel/"/>
      <url>/2024/04/29/java-DeviseModel/</url>
      
        <content type="html"><![CDATA[<h2 id="装饰模式"><a href="#装饰模式" class="headerlink" title="装饰模式"></a>装饰模式</h2><p>分析：</p><p>定义： 将继承关系变为动态的关系</p><p>角色：</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Security学习笔记</title>
      <link href="/2024/04/28/java-Security/"/>
      <url>/2024/04/28/java-Security/</url>
      
        <content type="html"><![CDATA[<h2 id="通过-security-实现自定义用户认证"><a href="#通过-security-实现自定义用户认证" class="headerlink" title="通过 security 实现自定义用户认证"></a>通过 security 实现自定义用户认证</h2><ol><li>密码加密器（PasswordEncoder） 作用：对用户输入的密码进行加密和校验</li><li>用户登录服务组件 （UserDetailsService） 作用：根据用户名，获取用户的主题</li><li>自定义认证和授权的配置 （SecurityFilterChain） 作用：自定义过滤器链，通过提供的方法来进行过滤器的配置</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户认证</span></span><br><span class="line">    security.formLogin(configurer -&gt;</span><br><span class="line">        configurer.loginPage() <span class="comment">//默认登录页面</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户退出</span></span><br><span class="line">    security.logout(configurer -&gt; configurer.logoutUrl());</span><br></pre></td></tr></table></figure><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><p>Spring Security 出现 ‘login.html?error’ is not a valid redirect URL 异常</p><h4 id="报错代码"><a href="#报错代码" class="headerlink" title="报错代码"></a>报错代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户认证</span></span><br><span class="line">security.formLogin(configurer -&gt;</span><br><span class="line">    configurer.loginPage(<span class="string">&quot;users/login&quot;</span>)</span><br><span class="line">            .loginProcessingUrl(<span class="string">&quot;/users/login&quot;</span>)</span><br><span class="line">            .failureUrl(<span class="string">&quot;/users/error&quot;</span>) <span class="comment">// 重定向到失败页面</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h3><p>在security的路径配置中，必须在代码前缀加上 “&#x2F;“</p><h4 id="修改后"><a href="#修改后" class="headerlink" title="修改后"></a>修改后</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户认证</span></span><br><span class="line">security.formLogin(configurer -&gt;</span><br><span class="line">    configurer.loginPage(<span class="string">&quot;/users/login&quot;</span>)</span><br><span class="line">            .loginProcessingUrl(<span class="string">&quot;/users/login&quot;</span>)</span><br><span class="line">            .failureUrl(<span class="string">&quot;/users/error&quot;</span>) <span class="comment">// 重定向到失败页面</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h3><p>security 的登录失败页面是在原重定向的页面拼接上 “?error” 然后对拼写的页面进行检查然后在类<br>org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler#setDefaultFailureUrl 中进行检查</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDefaultFailureUrl</span><span class="params">(String defaultFailureUrl)</span> &#123;</span><br><span class="line">Assert.isTrue(UrlUtils.isValidRedirectUrl(defaultFailureUrl),</span><br><span class="line">() -&gt; <span class="string">&quot;&#x27;&quot;</span> + defaultFailureUrl + <span class="string">&quot;&#x27; is not a valid redirect URL&quot;</span>);</span><br><span class="line"><span class="built_in">this</span>.defaultFailureUrl = defaultFailureUrl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 UrlUtils.isValidRedirectUrl(defaultFailureUrl) 进行判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isValidRedirectUrl</span><span class="params">(String url)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> url != <span class="literal">null</span> &amp;&amp; (url.startsWith(<span class="string">&quot;/&quot;</span>) || isAbsoluteUrl(url));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果返回 true 就加入后缀 如果返回 false 就抛出异常</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务的相关学习笔记</title>
      <link href="/2024/04/27/java-StudyNotes/"/>
      <url>/2024/04/27/java-StudyNotes/</url>
      
        <content type="html"><![CDATA[<h2 id="工具类包-StrUtil"><a href="#工具类包-StrUtil" class="headerlink" title="工具类包-StrUtil"></a>工具类包-StrUtil</h2><p>String字符串工具包 提供了大量的字符串相关方法</p><h3 id="依赖导入"><a href="#依赖导入" class="headerlink" title="依赖导入"></a>依赖导入</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--StringUtils工具类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">StrUtil.方法名()</span><br></pre></td></tr></table></figure><p>isNotBlank</p><p>用于判断字符串是否为空，null，””，等等</p><h2 id="对于不同的包的配置类如何生效"><a href="#对于不同的包的配置类如何生效" class="headerlink" title="对于不同的包的配置类如何生效"></a>对于不同的包的配置类如何生效</h2><p>在resource目录下的 META-INF 创建spring.factories文件<br>早期是使用spring.factories<br>现在改为EnableAutoConfiguration<br>配置类中写对应的类路径</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\</span></span><br><span class="line"><span class="string">对应类路径</span></span><br></pre></td></tr></table></figure><h3 id="多个路径使用-隔开"><a href="#多个路径使用-隔开" class="headerlink" title="多个路径使用,\隔开"></a>多个路径使用,\隔开</h3><h3 id="对于不想要生效的配置类"><a href="#对于不想要生效的配置类" class="headerlink" title="对于不想要生效的配置类"></a>对于不想要生效的配置类</h3><h4 id="使用-Conditional"><a href="#使用-Conditional" class="headerlink" title="使用 @Conditional"></a>使用 @Conditional</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@ConditionalOnClass()</span><br></pre></td></tr></table></figure><p>对于注解@ConditionalOnClass() 参数为 类.class 没有对应类将不进行注入</p><h2 id="微服务与微服务之间的数据传输"><a href="#微服务与微服务之间的数据传输" class="headerlink" title="微服务与微服务之间的数据传输"></a>微服务与微服务之间的数据传输</h2><p>一个微服务在与另一个微服务进行数据交互时用 OpenFeign 发起的远程调用不会自动传递信息</p><p>需要自己定义拦截器，添加请求头</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RequestInterceptor <span class="title function_">userInfoRequestInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RequestInterceptor</span>() &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">apply</span><span class="params">(RequestTemplate template)</span> &#123;</span><br><span class="line">            <span class="type">Long</span> <span class="variable">userId</span> <span class="operator">=</span> UserContext.getUser();</span><br><span class="line">            <span class="keyword">if</span> (userId != <span class="literal">null</span>)&#123;</span><br><span class="line">                template.header(<span class="string">&quot;user-info&quot;</span>, userId.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="OpenFeign的使用需要开启注解"><a href="#OpenFeign的使用需要开启注解" class="headerlink" title="OpenFeign的使用需要开启注解"></a>OpenFeign的使用需要开启注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableFeignClients(basePackages = &quot;com.zlg.api.client&quot;,defaultConfiguration = DefaultFeignConfig.class)</span></span><br></pre></td></tr></table></figure><h2 id="微服务配置管理"><a href="#微服务配置管理" class="headerlink" title="微服务配置管理"></a>微服务配置管理</h2><img src="https://img2.imgtp.com/2024/04/27/pERzUWKl.png" alt=""><h3 id="1-添加配置到-Nacos-配置中心"><a href="#1-添加配置到-Nacos-配置中心" class="headerlink" title="1.添加配置到 Nacos 配置中心"></a>1.添加配置到 Nacos 配置中心</h3><img src="https://img2.imgtp.com/2024/04/29/9VPoAAUN.png" alt="" /><p>对于需要动态修改的配置内容使用 “${}” 变量 的方式作为占位符,然后在需要改动的配置中进行变量的赋值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hm:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">pw:</span> <span class="number">123</span></span><br></pre></td></tr></table></figure><p>其中 ${ :} 表示如果没有进行变量赋值时的默认值</p><h3 id="2-拉取共享配置"><a href="#2-拉取共享配置" class="headerlink" title="2.拉取共享配置"></a>2.拉取共享配置</h3><p>springCloud 启动的流程</p><img src="https://img2.imgtp.com/2024/04/29/uCqc3iPK.png" alt=""><ol><li>通过xml依赖引入，拉取配置文件和读取 bootstrap 文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--nacos配置管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--读取bootstrap文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>新建 bootstrap.yaml 配置文件 配置nacos和共享配置文件的配置</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cart-service</span> <span class="comment"># 微服务名称</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.150</span><span class="number">.101</span> <span class="comment"># nacos地址</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span> <span class="comment"># 文件后缀名</span></span><br><span class="line">        <span class="attr">shared-configs:</span> <span class="comment"># 共享配置</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">dataId:</span> <span class="string">shared-jdbc.yaml</span> <span class="comment"># 共享配置文件id</span></span><br></pre></td></tr></table></figure><h2 id="配置热更新"><a href="#配置热更新" class="headerlink" title="配置热更新"></a>配置热更新</h2><p>通过修改nacos中的配置可以实现不重启项目实现更新项目<br>这边通过配置一个变量来演示</p><p>自定义的配置类和参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;hm.cart&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartProperties</span> &#123;</span><br><span class="line">    <span class="keyword">private</span>  Integer maxItems;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际的使用场景</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">checkCartsFull</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> lambdaQuery().eq(Cart::getUserId, userId).count();</span><br><span class="line">    <span class="keyword">if</span> (count &gt;= cartProperties.getMaxItems()) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BizIllegalException</span>(StrUtil.format(<span class="string">&quot;用户购物车课程不能超过&#123;&#125;&quot;</span>, cartProperties.getMaxItems()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>nacos 中的配置<br><img src="https://img2.imgtp.com/2024/05/05/biKpxP8Y.png" ><br>nacos 配置的命名规范<br><img src="https://img2.imgtp.com/2024/05/05/vatViBTq.png" ></p><p>然后就可以实现修改nacos中的配置文件达到项目的修改-简称”热更新”</p><h2 id="雪崩问题"><a href="#雪崩问题" class="headerlink" title="雪崩问题"></a>雪崩问题</h2><p>什么是雪崩问题：见名知义，就是在为服务中由于一个微服务模块的故障导致链路中的所有服务都无法使用</p><h3 id="保护方案"><a href="#保护方案" class="headerlink" title="保护方案"></a>保护方案</h3><ol><li>请求限流-流量整形<br>限制接口的请求并发数量，避免服务因流量激增出现故障 将原本忽高忽低的请求量限制在一定的范围上</li><li>线程隔离-舱壁模式<br>模拟船舱隔板的防水原理。通过限定每个业务能够使用的线程数量而将故障隔离，避免故障扩散。</li><li>服务熔断<br>由断路器统计请求的异常比例或调慢比例，如果超出阈值则熔断该业务，则拦截该接口的请求。 熔断期间，所有请求快速失败，全部走fallback逻辑</li></ol><h3 id="保护技术"><a href="#保护技术" class="headerlink" title="保护技术"></a>保护技术</h3><img src="https://img2.imgtp.com/2024/05/05/cYQ1lGBz.png" alt=""><h3 id="技术实现"><a href="#技术实现" class="headerlink" title="技术实现"></a>技术实现</h3><h4 id="1-启动-sentinel"><a href="#1-启动-sentinel" class="headerlink" title="1.启动 sentinel"></a>1.启动 sentinel</h4><p>通过阿里巴巴的 sentinel-dashboard 实现<br>下载相关的jar包，使用java虚拟机运行后访问<br>相关启动命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Dserver.port=8090 -Dcsp.sentinel.dashboard.server=localhost:8090 -Dproject.name=sentinel-dashboard -jar sentinel-dashboard.jar</span><br></pre></td></tr></table></figure><p>注意: jar包的位置不能存在中文字符</p><p>启动成功后在浏览器输入对应的端口号就能进入登录页面</p><img src="https://img2.imgtp.com/2024/05/06/z6yUPpwP.png" alt=""><p>用户名和密码都是 sentinel<br>进入控制台后就可以通过控制台实现对项目相关的各种控制了</p><h4 id="2-联系项目"><a href="#2-联系项目" class="headerlink" title="2. 联系项目"></a>2. 联系项目</h4><p>导入sentinel依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--sentinel--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置控制台</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="string">localhost:8090</span></span><br></pre></td></tr></table></figure><p>然后访问项目接口就可以实现监控了<br>簇点链路是单机调用链路，默认情况会监控springmvc每一个Endpoint(接口) 也就是controller层的请求<br>但是默认情况下簇点展示的是接口的路径，通过restful风格编设计的接口，有些路径会产生相同路径，需要开启Sentinel的请求方式前缀进行区分</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="string">localhost:8090</span></span><br><span class="line">      <span class="attr">http-method-specify:</span> <span class="literal">true</span> <span class="comment"># 开启请求方式前缀</span></span><br></pre></td></tr></table></figure><h4 id="3-请求限流"><a href="#3-请求限流" class="headerlink" title="3. 请求限流"></a>3. 请求限流</h4><p>直接点击相关路径的流控按钮就可以进行限流的的控制</p><img src="https://img2.imgtp.com/2024/05/06/kN2Bp9fa.png" alt=""><h4 id="4-线程隔离"><a href="#4-线程隔离" class="headerlink" title="4. 线程隔离"></a>4. 线程隔离</h4><p>线程需要隔离是因为微服务相互调用导致线程资源的占用<br>涉及到微服务就需要开启Feign的Sentinel功能</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 开启feign对sentinel的支持</span></span><br></pre></td></tr></table></figure><p>小提示： 默认情况下tomcat最大线程数是200,允许的最大连接是8192<br>开启之后，远程调用微服务的请求就会被识别为一个簇点资源<br>然后对相关簇点进行限流就可以了</p><h4 id="5-fallback"><a href="#5-fallback" class="headerlink" title="5. fallback"></a>5. fallback</h4><p>对于触发了限流或者熔断的操作并非需要抛出异常，这是就可以使用fallback的方式，使用日志的形式来处理此类情况<br>给FeignClient编写失败后的降级逻辑有两种方式</p><ol><li>FallbackClass 缺点：无法对远程调用的异常做出处理（偏向于快速启用的偷懒方式）</li><li>FallbackFactory 可以对远程调用的异常做出处理，一般采取这种方式</li></ol><p>使用FallbackFactory的方式</p><ol><li>在公共的微服务请求转发模块建立工厂</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ItemClientFallback</span> <span class="keyword">implements</span> <span class="title class_">FallbackFactory</span>&lt;ItemClient&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ItemClient <span class="title function_">create</span><span class="params">(Throwable cause)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ItemClient</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> List&lt;ItemDTO&gt; <span class="title function_">queryItemByIds</span><span class="params">(Collection&lt;Long&gt; ids)</span> &#123;</span><br><span class="line">                log.error(<span class="string">&quot;远程调用ItemClient#queryItemByIds方法出现异常，参数：&#123;&#125;&quot;</span>, ids, cause);</span><br><span class="line">                <span class="comment">// 查询购物车允许失败，查询失败，返回空集合</span></span><br><span class="line">                <span class="keyword">return</span> CollUtils.emptyList();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deductStock</span><span class="params">(List&lt;OrderDetailDTO&gt; items)</span> &#123;</span><br><span class="line">                <span class="comment">// 库存扣减业务需要触发事务回滚，查询失败，抛出异常</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BizIllegalException</span>(cause);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>核心部分在于继承 FallbackFactory 接口 和请求失败后的业务逻辑处理</p><ol start="2"><li>然后将工厂注册为bean</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> ItemClientFallback <span class="title function_">itemClientFallback</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ItemClientFallback</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>最后在定义的转发接口中使用工厂</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;item-service&quot;,</span></span><br><span class="line"><span class="meta">        configuration = DefaultFeignConfig.class,</span></span><br><span class="line"><span class="meta">        fallback = ItemClientFallback.class)</span></span><br></pre></td></tr></table></figure><h4 id="6-服务熔断"><a href="#6-服务熔断" class="headerlink" title="6. 服务熔断"></a>6. 服务熔断</h4><p>熔断的过程<br><img src="https://img2.imgtp.com/2024/05/07/dfekcDUQ.png"></p><p>熔断配置<br><img src="https://img2.imgtp.com/2024/05/07/N76s3wgw.png"></p><h4 id="7-持久化保存配置"><a href="#7-持久化保存配置" class="headerlink" title="7. 持久化保存配置"></a>7. 持久化保存配置</h4><p>使用jar包启动的控制台配置，在刷新页面就会丢失相应的配置<br>所有需要持久化的保存的话需要新的方法<br>这里使用的是nacos的方式进行配置的持久化保存</p><ol><li>引入依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-datasource-nacos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>具体的版本号要和sentinel的版本号对应</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验4-web页面广告制作</title>
      <link href="/2024/04/27/shiyan4/"/>
      <url>/2024/04/27/shiyan4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">closeCouplet</span>(<span class="params">coupletId</span>) &#123;</span><br><span class="line">    <span class="comment">// 获取标签</span></span><br><span class="line">    <span class="keyword">let</span> couplet = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(coupletId);</span><br><span class="line">    <span class="comment">// 将标签隐藏,设置为空</span></span><br><span class="line">    couplet.<span class="property">style</span>.<span class="property">visibility</span> = <span class="string">&#x27;hidden&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义变量用于保存定时器</span></span><br><span class="line"><span class="keyword">let</span> intervalId;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 首次调用 setInterval 定时器</span></span><br><span class="line"><span class="title function_">startInterval</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">startInterval</span>(<span class="params"></span>) &#123;</span><br><span class="line">    intervalId = <span class="built_in">setInterval</span>(down, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">down</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取广告标签</span></span><br><span class="line">    <span class="keyword">let</span> down = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;couplet-down&#x27;</span>);</span><br><span class="line">    <span class="comment">// 获取广告标签样式</span></span><br><span class="line">    <span class="keyword">let</span> style = <span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(down);</span><br><span class="line">    <span class="comment">// 广告显现</span></span><br><span class="line">    down.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;flex&#x27;</span>;</span><br><span class="line">    <span class="comment">// 获取广告当前位置</span></span><br><span class="line">    <span class="keyword">let</span> top = <span class="built_in">parseInt</span>(style.<span class="title function_">getPropertyValue</span>(<span class="string">&quot;top&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (top &gt; <span class="number">320</span>) &#123;</span><br><span class="line">        <span class="comment">// 设置图片上移</span></span><br><span class="line">        down.<span class="property">style</span>.<span class="property">top</span> = (top - <span class="number">0.1</span>) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 当 top 小于等于 320 时，清除定时器</span></span><br><span class="line">        <span class="built_in">clearInterval</span>(intervalId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>    /* 所有元素都采用弹性布局，水平分布 */    .all {        display: flex;        justify-content: space-between;    }    /* 左侧和右侧对联样式 */    #couplet-left, #couplet-right {        height: 300px;        position: sticky; /* 让页面标签在滚动时固定 */        top: 0;        z-index: 1000; /* 确保在其他内容之上 */    }    /* 左侧和右侧对联的图片样式 */    #img-left, #img-right {        width: 200px;        height: 300px;    }    /* 内容区域样式 */    #content {        width: 800px;        height: 1500px;        background-color: aqua;    }    /* 关闭按钮样式 */    #close-couplet-left, #close-couplet-right,#close-couplet-down {        background-color: black;        color: white;        position: absolute; /* 绝对定位 */        top: 5px;        right: 5px;        border: none; /* 去除边框 */        padding: 5px 10px; /* 上下 5px，左右 10px 的内边距 */        cursor: pointer; /* 设置鼠标样式为手型 */    }    /* 下方对联样式 */    #couplet-down {        position: absolute; /* 绝对定位 */        top: 2300px;        left: 150px;        z-index: 1000; /* 确保在其他内容之上 */    }    /* 下方对联的图片样式 */    #img-down {        width: 200px;        height: 200px;    }</style><div class="all">    <div id="couplet-left">        <img id="img-left" src="https://img2.imgtp.com/2024/04/27/9Vub4ETq.png" alt="">        <button onclick="closeCouplet('couplet-left')" id="close-couplet-left">关闭</button>    </div>    <div id="content">1</div>    <div id="couplet-right">        <img id="img-right" src="https://img2.imgtp.com/2024/04/27/tFhZGONP.png" alt=""/>        <button onclick="closeCouplet('couplet-right')" id="close-couplet-right">关闭</button>    </div>    <div id="couplet-down" style="display: none">        <img src="https://img2.imgtp.com/2024/04/27/XdXkejvV.png" id="img-down" alt="" />        <button onclick="closeCouplet('couplet-down')" id="close-couplet-down">关闭</button>    </div></div><script>    function closeCouplet(coupletId) {        let couplet = document.getElementById(coupletId);        couplet.style.visibility = 'hidden';    }    let intervalId;    startInterval();    function startInterval() {        intervalId = setInterval(down, 1);    }    function down() {        let down = document.getElementById('couplet-down');        let style = window.getComputedStyle(down);        down.style.display = 'flex';        let top = parseInt(style.getPropertyValue("top"));        if (top > 1000) {            down.style.top = (top - 0.1) + "px";        } else {            clearInterval(intervalId);        }    }</script>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作业1,使用循环打印基础图形</title>
      <link href="/2024/04/06/homeWork1/"/>
      <url>/2024/04/06/homeWork1/</url>
      
        <content type="html"><![CDATA[<h1 id="作业1"><a href="#作业1" class="headerlink" title="作业1"></a>作业1</h1><h3 id="使用循环打印基础图形"><a href="#使用循环打印基础图形" class="headerlink" title="使用循环打印基础图形"></a>使用循环打印基础图形</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> number = <span class="number">5</span>;</span><br><span class="line">number = <span class="variable language_">window</span>.<span class="title function_">prompt</span>(<span class="string">&quot;请输入生成的行数&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成n个空格</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateSpaces</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> spaces = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        spaces += <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> spaces;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成n个星号</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateStars</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> stars = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        stars += <span class="string">&quot;* &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> stars;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印等腰三角形</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">printTriangle</span>(<span class="params">rows</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> triangle = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= rows; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> spaces = <span class="title function_">generateSpaces</span>(rows - i);</span><br><span class="line">        <span class="keyword">let</span> stars = <span class="title function_">generateStars</span>(i);</span><br><span class="line">        triangle += spaces + stars + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;pre&gt;&quot;</span> + triangle + <span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印平行四边形</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">printParallelogram</span>(<span class="params">rows</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> parallelogram = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= rows; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> spaces = <span class="title function_">generateSpaces</span>(rows - i);</span><br><span class="line">        <span class="keyword">let</span> stars = <span class="title function_">generateStars</span>(rows);</span><br><span class="line">        parallelogram += spaces + stars + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;pre&gt;&quot;</span> + parallelogram + <span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印菱形</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">printDiamond</span>(<span class="params">rows</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> midRow = <span class="title class_">Math</span>.<span class="title function_">floor</span>(rows / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">let</span> diamond = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// 打印上半部分</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; midRow; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> spaces = <span class="title function_">generateSpaces</span>(<span class="number">2</span> * midRow - <span class="number">2</span> * i);</span><br><span class="line">        <span class="keyword">let</span> stars = <span class="title function_">generateStars</span>(i * <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">        diamond += spaces + stars + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 打印中间行</span></span><br><span class="line">    <span class="keyword">if</span>(rows%<span class="number">2</span> === <span class="number">0</span>)&#123;</span><br><span class="line">        rows++;</span><br><span class="line">    &#125;</span><br><span class="line">    diamond += <span class="title function_">generateStars</span>(rows) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印下半部分</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = midRow - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">let</span> spaces = <span class="title function_">generateSpaces</span>(<span class="number">2</span> * midRow - <span class="number">2</span> * i);</span><br><span class="line">        <span class="keyword">let</span> stars = <span class="title function_">generateStars</span>(i * <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">        diamond += spaces + stars + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;pre&gt;&quot;</span> + diamond + <span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用打印函数</span></span><br><span class="line"><span class="title function_">printTriangle</span>(number);</span><br><span class="line"><span class="title function_">printParallelogram</span>(number);</span><br><span class="line"><span class="title function_">printDiamond</span>(number);</span><br><span class="line"></span><br></pre></td></tr></table></figure><script>let number = 5;number = window.prompt("请输入生成的行数")// 生成n个空格function generateSpaces(n) {    let spaces = "";    for (let i = 0; i < n; i++) {        spaces += " ";    }    return spaces;}// 生成n个星号function generateStars(n) {    let stars = "";    for (let i = 0; i < n; i++) {        stars += "* ";    }    return stars;}// 打印等腰三角形function printTriangle(rows) {    let triangle = "";    for (let i = 1; i <= rows; i++) {        let spaces = generateSpaces(rows - i);        let stars = generateStars(i);        triangle += spaces + stars + "\n";    }    document.write("<pre>" + triangle + "</pre>");}// 打印平行四边形function printParallelogram(rows) {let parallelogram = "";for (let i = 1; i <= rows; i++) {let spaces = generateSpaces(rows - i);let stars = generateStars(rows);parallelogram += spaces + stars + "\n";}document.write("<pre>" + parallelogram + "</pre>");}// 打印菱形function printDiamond(rows) {let midRow = Math.floor(rows / 2);let diamond = "";// 打印上半部分for (let i = 0; i < midRow; i++) {let spaces = generateSpaces(2 * midRow - 2 * i);let stars = generateStars(i * 2 + 1);diamond += spaces + stars + "\n";}// 打印中间行if(rows%2 === 0){rows++;}diamond += generateStars(rows) + "\n";    // 打印下半部分    for (let i = midRow - 1; i >= 0; i--) {        let spaces = generateSpaces(2 * midRow - 2 * i);        let stars = generateStars(i * 2 + 1);        diamond += spaces + stars + "\n";    }    document.write("<pre>" + diamond + "</pre>");}// 调用打印函数printTriangle(number);printParallelogram(number);printDiamond(number);</script>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闭包</title>
      <link href="/2024/04/06/homeWork2/"/>
      <url>/2024/04/06/homeWork2/</url>
      
        <content type="html"><![CDATA[<h2 id="作业2"><a href="#作业2" class="headerlink" title="作业2"></a>作业2</h2><h3 id="简单的闭包的实现"><a href="#简单的闭包的实现" class="headerlink" title="简单的闭包的实现"></a>简单的闭包的实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> ++num;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> count = <span class="title function_">fn</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">count</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">count</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">count</span>())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/link.html"/>
      <url>/link/link.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>music</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
